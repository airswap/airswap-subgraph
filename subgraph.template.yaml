specVersion: 1.0.0
indexerHints:
  prune: auto
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: SwapERC20Contract
    network: '{{network}}'
    source:
      address: '{{swap_erc20_address}}'
      abi: SwapERC20Contract
      startBlock: {{swap_erc20_start_block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - SwapERC20
      abis:
        - name: SwapERC20Contract
          file: ./abis/SwapERC20.json
        - name: _ERC20
          file: ./src/messari/abis/Prices/ERC20.json
        - name: CurvePool
          file: ./src/messari/abis/Prices/Curve/Pool.json
        - name: CurveRegistry
          file: ./src/messari/abis/Prices/Curve/Registry.json
        - name: CalculationsCurve
          file: ./src/messari/abis/Prices/Calculations/Curve.json
        - name: YearnLensContract
          file: ./src/messari/abis/Prices/YearnLens.json
        - name: AaveOracleContract
          file: ./src/messari/abis/Prices/AaveOracle.json
        - name: CalculationsSushiSwap
          file: ./src/messari/abis/Prices/Calculations/SushiSwap.json
        - name: ChainLinkContract
          file: ./src/messari/abis/Prices/ChainLink.json
        - name: UniswapRouter
          file: ./src/messari/abis/Prices/Uniswap/Router.json
        - name: UniswapFactory
          file: ./src/messari/abis/Prices/Uniswap/Factory.json
        - name: UniswapPair
          file: ./src/messari/abis/Prices/Uniswap/Pair.json
      eventHandlers:
        - event: SwapERC20(indexed uint256,indexed address)
          handler: handleSwapERC20
      file: ./src/swap-erc20-v5.ts
  - kind: ethereum
    name: SwapERC20ContractV4
    network: '{{network}}'
    source:
      address: '{{legacy_swap_erc20_v4_address}}'
      abi: SwapERC20Contract
      startBlock: {{legacy_swap_erc20_v4_start_block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - SwapERC20
      abis:
        - name: SwapERC20Contract
          file: ./abis/SwapERC20V4.json
        - name: _ERC20
          file: ./src/messari/abis/Prices/ERC20.json
        - name: CurvePool
          file: ./src/messari/abis/Prices/Curve/Pool.json
        - name: CurveRegistry
          file: ./src/messari/abis/Prices/Curve/Registry.json
        - name: CalculationsCurve
          file: ./src/messari/abis/Prices/Calculations/Curve.json
        - name: YearnLensContract
          file: ./src/messari/abis/Prices/YearnLens.json
        - name: AaveOracleContract
          file: ./src/messari/abis/Prices/AaveOracle.json
        - name: CalculationsSushiSwap
          file: ./src/messari/abis/Prices/Calculations/SushiSwap.json
        - name: ChainLinkContract
          file: ./src/messari/abis/Prices/ChainLink.json
        - name: UniswapRouter
          file: ./src/messari/abis/Prices/Uniswap/Router.json
        - name: UniswapFactory
          file: ./src/messari/abis/Prices/Uniswap/Factory.json
        - name: UniswapPair
          file: ./src/messari/abis/Prices/Uniswap/Pair.json
      eventHandlers:
        - event: SwapERC20(indexed uint256,indexed address,address,uint256,uint256,indexed address,address,uint256)
          handler: handleSwapERC20
      file: ./src/swap-erc20-v4.ts
  - kind: ethereum
    name: RegistryContract
    network: '{{network}}'
    source:
      address: '{{registry_address}}'
      abi: RegistryContract
      startBlock: {{registry_start_block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Registry
      abis:
        - name: RegistryContract
          file: ./abis/Registry.json
      eventHandlers:
        - event: SetServerURL(indexed address,string)
          handler: handleSetServerURL
        - event: AddProtocols(indexed address,bytes4[])
          handler: handleAddProtocols
        - event: RemoveProtocols(indexed address,bytes4[])
          handler: handleRemoveProtocols
        - event: AddTokens(indexed address,address[])
          handler: handleAddTokens
        - event: RemoveTokens(indexed address,address[])
          handler: handleRemoveTokens
        - event: UnsetServer(indexed address,string,bytes4[],address[])
          handler: handleUnsetServer
      file: ./src/registry.ts
  - kind: ethereum
    name: DelegateContract
    network: '{{network}}'
    source:
      address: '{{delegate_address}}'
      abi: DelegateContract
      startBlock: {{delegate_start_block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Delegate
      abis:
        - name: DelegateContract
          file: ./abis/Delegate.json
      eventHandlers:
        - event: SetRule(indexed address,indexed address,uint256,indexed address,uint256,uint256)
          handler: handleSetRule
        - event: UnsetRule(indexed address,indexed address,indexed address)
          handler: handleUnsetRule
        - event: DelegatedSwapFor(indexed address,indexed address,indexed uint256)
          handler: handleDelegatedSwapFor
      file: ./src/delegate.ts