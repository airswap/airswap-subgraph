// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class WrappedSwapFor extends ethereum.Event {
  get params(): WrappedSwapFor__Params {
    return new WrappedSwapFor__Params(this);
  }
}

export class WrappedSwapFor__Params {
  _event: WrappedSwapFor;

  constructor(event: WrappedSwapFor) {
    this._event = event;
  }

  get senderWallet(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Wrapper extends ethereum.SmartContract {
  static bind(address: Address): Wrapper {
    return new Wrapper("Wrapper", address);
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  swapContract(): Address {
    let result = super.call("swapContract", "swapContract():(address)", []);

    return result[0].toAddress();
  }

  try_swapContract(): ethereum.CallResult<Address> {
    let result = super.tryCall("swapContract", "swapContract():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  wethContract(): Address {
    let result = super.call("wethContract", "wethContract():(address)", []);

    return result[0].toAddress();
  }

  try_wethContract(): ethereum.CallResult<Address> {
    let result = super.tryCall("wethContract", "wethContract():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _swapContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _wethContract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BuyNFTCall extends ethereum.Call {
  get inputs(): BuyNFTCall__Inputs {
    return new BuyNFTCall__Inputs(this);
  }

  get outputs(): BuyNFTCall__Outputs {
    return new BuyNFTCall__Outputs(this);
  }
}

export class BuyNFTCall__Inputs {
  _call: BuyNFTCall;

  constructor(call: BuyNFTCall) {
    this._call = call;
  }

  get nonce(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get expiry(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get signerWallet(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get signerToken(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get signerID(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get senderToken(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get senderAmount(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[7].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[8].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[9].value.toBytes();
  }
}

export class BuyNFTCall__Outputs {
  _call: BuyNFTCall;

  constructor(call: BuyNFTCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SellNFTCall extends ethereum.Call {
  get inputs(): SellNFTCall__Inputs {
    return new SellNFTCall__Inputs(this);
  }

  get outputs(): SellNFTCall__Outputs {
    return new SellNFTCall__Outputs(this);
  }
}

export class SellNFTCall__Inputs {
  _call: SellNFTCall;

  constructor(call: SellNFTCall) {
    this._call = call;
  }

  get nonce(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get expiry(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get signerWallet(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get signerToken(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get signerAmount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get senderToken(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get senderID(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[7].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[8].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[9].value.toBytes();
  }
}

export class SellNFTCall__Outputs {
  _call: SellNFTCall;

  constructor(call: SellNFTCall) {
    this._call = call;
  }
}

export class SetSwapContractCall extends ethereum.Call {
  get inputs(): SetSwapContractCall__Inputs {
    return new SetSwapContractCall__Inputs(this);
  }

  get outputs(): SetSwapContractCall__Outputs {
    return new SetSwapContractCall__Outputs(this);
  }
}

export class SetSwapContractCall__Inputs {
  _call: SetSwapContractCall;

  constructor(call: SetSwapContractCall) {
    this._call = call;
  }

  get _swapContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSwapContractCall__Outputs {
  _call: SetSwapContractCall;

  constructor(call: SetSwapContractCall) {
    this._call = call;
  }
}

export class SwapCall extends ethereum.Call {
  get inputs(): SwapCall__Inputs {
    return new SwapCall__Inputs(this);
  }

  get outputs(): SwapCall__Outputs {
    return new SwapCall__Outputs(this);
  }
}

export class SwapCall__Inputs {
  _call: SwapCall;

  constructor(call: SwapCall) {
    this._call = call;
  }

  get nonce(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get expiry(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get signerWallet(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get signerToken(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get signerAmount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get senderToken(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get senderAmount(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[7].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[8].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[9].value.toBytes();
  }
}

export class SwapCall__Outputs {
  _call: SwapCall;

  constructor(call: SwapCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
