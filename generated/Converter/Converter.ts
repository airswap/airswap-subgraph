// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ConvertAndTransfer extends ethereum.Event {
  get params(): ConvertAndTransfer__Params {
    return new ConvertAndTransfer__Params(this);
  }
}

export class ConvertAndTransfer__Params {
  _event: ConvertAndTransfer;

  constructor(event: ConvertAndTransfer) {
    this._event = event;
  }

  get triggerAccount(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get swapFromToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get swapToToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amountTokenFrom(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amountTokenTo(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get recievedAddresses(): Array<Address> {
    return this._event.parameters[5].value.toAddressArray();
  }
}

export class DrainTo extends ethereum.Event {
  get params(): DrainTo__Params {
    return new DrainTo__Params(this);
  }
}

export class DrainTo__Params {
  _event: DrainTo;

  constructor(event: DrainTo) {
    this._event = event;
  }

  get tokens(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get dest(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PayeeAdded extends ethereum.Event {
  get params(): PayeeAdded__Params {
    return new PayeeAdded__Params(this);
  }
}

export class PayeeAdded__Params {
  _event: PayeeAdded;

  constructor(event: PayeeAdded) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get shares(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PayeeRemoved extends ethereum.Event {
  get params(): PayeeRemoved__Params {
    return new PayeeRemoved__Params(this);
  }
}

export class PayeeRemoved__Params {
  _event: PayeeRemoved;

  constructor(event: PayeeRemoved) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Converter extends ethereum.SmartContract {
  static bind(address: Address): Converter {
    return new Converter("Converter", address);
  }

  getTokenPath(_token: Address): Array<Address> {
    let result = super.call(
      "getTokenPath",
      "getTokenPath(address):(address[])",
      [ethereum.Value.fromAddress(_token)]
    );

    return result[0].toAddressArray();
  }

  try_getTokenPath(_token: Address): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getTokenPath",
      "getTokenPath(address):(address[])",
      [ethereum.Value.fromAddress(_token)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  payee(index: BigInt): Address {
    let result = super.call("payee", "payee(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(index)
    ]);

    return result[0].toAddress();
  }

  try_payee(index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("payee", "payee(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(index)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  shares(account: Address): BigInt {
    let result = super.call("shares", "shares(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBigInt();
  }

  try_shares(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("shares", "shares(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  swapToToken(): Address {
    let result = super.call("swapToToken", "swapToToken():(address)", []);

    return result[0].toAddress();
  }

  try_swapToToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("swapToToken", "swapToToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalShares(): BigInt {
    let result = super.call("totalShares", "totalShares():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalShares(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalShares", "totalShares():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  triggerFee(): BigInt {
    let result = super.call("triggerFee", "triggerFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_triggerFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("triggerFee", "triggerFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  uniRouter(): Address {
    let result = super.call("uniRouter", "uniRouter():(address)", []);

    return result[0].toAddress();
  }

  try_uniRouter(): ethereum.CallResult<Address> {
    let result = super.tryCall("uniRouter", "uniRouter():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  wETH(): Address {
    let result = super.call("wETH", "wETH():(address)", []);

    return result[0].toAddress();
  }

  try_wETH(): ethereum.CallResult<Address> {
    let result = super.tryCall("wETH", "wETH():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _wETH(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _swapToToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _uniRouter(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _triggerFee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _payees(): Array<Address> {
    return this._call.inputValues[4].value.toAddressArray();
  }

  get _shares(): Array<BigInt> {
    return this._call.inputValues[5].value.toBigIntArray();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddPayeeCall extends ethereum.Call {
  get inputs(): AddPayeeCall__Inputs {
    return new AddPayeeCall__Inputs(this);
  }

  get outputs(): AddPayeeCall__Outputs {
    return new AddPayeeCall__Outputs(this);
  }
}

export class AddPayeeCall__Inputs {
  _call: AddPayeeCall;

  constructor(call: AddPayeeCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _shares(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddPayeeCall__Outputs {
  _call: AddPayeeCall;

  constructor(call: AddPayeeCall) {
    this._call = call;
  }
}

export class ConvertAndTransferCall extends ethereum.Call {
  get inputs(): ConvertAndTransferCall__Inputs {
    return new ConvertAndTransferCall__Inputs(this);
  }

  get outputs(): ConvertAndTransferCall__Outputs {
    return new ConvertAndTransferCall__Outputs(this);
  }
}

export class ConvertAndTransferCall__Inputs {
  _call: ConvertAndTransferCall;

  constructor(call: ConvertAndTransferCall) {
    this._call = call;
  }

  get _swapFromToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amountOutMin(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ConvertAndTransferCall__Outputs {
  _call: ConvertAndTransferCall;

  constructor(call: ConvertAndTransferCall) {
    this._call = call;
  }
}

export class DrainToCall extends ethereum.Call {
  get inputs(): DrainToCall__Inputs {
    return new DrainToCall__Inputs(this);
  }

  get outputs(): DrainToCall__Outputs {
    return new DrainToCall__Outputs(this);
  }
}

export class DrainToCall__Inputs {
  _call: DrainToCall;

  constructor(call: DrainToCall) {
    this._call = call;
  }

  get _transferTo(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokens(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class DrainToCall__Outputs {
  _call: DrainToCall;

  constructor(call: DrainToCall) {
    this._call = call;
  }
}

export class RemovePayeeCall extends ethereum.Call {
  get inputs(): RemovePayeeCall__Inputs {
    return new RemovePayeeCall__Inputs(this);
  }

  get outputs(): RemovePayeeCall__Outputs {
    return new RemovePayeeCall__Outputs(this);
  }
}

export class RemovePayeeCall__Inputs {
  _call: RemovePayeeCall;

  constructor(call: RemovePayeeCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _index(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RemovePayeeCall__Outputs {
  _call: RemovePayeeCall;

  constructor(call: RemovePayeeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetSwapToTokenCall extends ethereum.Call {
  get inputs(): SetSwapToTokenCall__Inputs {
    return new SetSwapToTokenCall__Inputs(this);
  }

  get outputs(): SetSwapToTokenCall__Outputs {
    return new SetSwapToTokenCall__Outputs(this);
  }
}

export class SetSwapToTokenCall__Inputs {
  _call: SetSwapToTokenCall;

  constructor(call: SetSwapToTokenCall) {
    this._call = call;
  }

  get _swapToToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSwapToTokenCall__Outputs {
  _call: SetSwapToTokenCall;

  constructor(call: SetSwapToTokenCall) {
    this._call = call;
  }
}

export class SetTokenPathCall extends ethereum.Call {
  get inputs(): SetTokenPathCall__Inputs {
    return new SetTokenPathCall__Inputs(this);
  }

  get outputs(): SetTokenPathCall__Outputs {
    return new SetTokenPathCall__Outputs(this);
  }
}

export class SetTokenPathCall__Inputs {
  _call: SetTokenPathCall;

  constructor(call: SetTokenPathCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenPath(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class SetTokenPathCall__Outputs {
  _call: SetTokenPathCall;

  constructor(call: SetTokenPathCall) {
    this._call = call;
  }
}

export class SetTriggerFeeCall extends ethereum.Call {
  get inputs(): SetTriggerFeeCall__Inputs {
    return new SetTriggerFeeCall__Inputs(this);
  }

  get outputs(): SetTriggerFeeCall__Outputs {
    return new SetTriggerFeeCall__Outputs(this);
  }
}

export class SetTriggerFeeCall__Inputs {
  _call: SetTriggerFeeCall;

  constructor(call: SetTriggerFeeCall) {
    this._call = call;
  }

  get _triggerFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetTriggerFeeCall__Outputs {
  _call: SetTriggerFeeCall;

  constructor(call: SetTriggerFeeCall) {
    this._call = call;
  }
}

export class SetWETHCall extends ethereum.Call {
  get inputs(): SetWETHCall__Inputs {
    return new SetWETHCall__Inputs(this);
  }

  get outputs(): SetWETHCall__Outputs {
    return new SetWETHCall__Outputs(this);
  }
}

export class SetWETHCall__Inputs {
  _call: SetWETHCall;

  constructor(call: SetWETHCall) {
    this._call = call;
  }

  get _swapWETH(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetWETHCall__Outputs {
  _call: SetWETHCall;

  constructor(call: SetWETHCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
